[08:06:33,032] [INFO] AbstractLogger.handle_0ArgsCall --> 服务器连接成功
[08:14:48,557] [INFO] AbstractLogger.handle_0ArgsCall --> 服务器连接成功
[08:31:29,994] [INFO] AbstractLogger.handle_0ArgsCall --> 服务器连接成功
[08:31:33,689] [WARN] DefaultChannelPipeline.onUnhandledInboundException --> An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.lang.ClassCastException: com.baven.msg.GameMsgProtocol$UserMoveToResult cannot be cast to com.baven.msg.GameMsgProtocol$UserMoveToCmd
	at com.baven.GameMsgHandler18.channelRead0(GameMsgHandler.java:49)
	at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.baven.GameMsgDecoder18.channelRead(GameMsgDecoder.java:39)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.Utf8FrameValidator.channelRead(Utf8FrameValidator.java:77)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler$1.channelRead(WebSocketServerProtocolHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:326)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:300)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1422)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:931)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:700)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:635)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:552)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:514)
	at io.netty.util.concurrent.SingleThreadEventExecutor$6.run(SingleThreadEventExecutor.java:1050)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[08:31:34,762] [WARN] DefaultChannelPipeline.onUnhandledInboundException --> An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.lang.ClassCastException: com.baven.msg.GameMsgProtocol$UserMoveToResult cannot be cast to com.baven.msg.GameMsgProtocol$UserMoveToCmd
	at com.baven.GameMsgHandler18.channelRead0(GameMsgHandler.java:49)
	at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at com.baven.GameMsgDecoder18.channelRead(GameMsgDecoder.java:39)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.Utf8FrameValidator.channelRead(Utf8FrameValidator.java:77)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler$1.channelRead(WebSocketServerProtocolHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:326)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:300)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1422)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:931)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:700)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:635)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:552)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:514)
	at io.netty.util.concurrent.SingleThreadEventExecutor$6.run(SingleThreadEventExecutor.java:1050)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[08:32:42,442] [INFO] AbstractLogger.handle_0ArgsCall --> 服务器连接成功
[09:11:43,920] [INFO] AbstractLogger.handle_0ArgsCall --> 服务器连接成功
[09:17:55,487] [INFO] AbstractLogger.handle_0ArgsCall --> 服务器连接成功
[09:34:40,991] [INFO] AbstractLogger.handle_0ArgsCall --> 服务器连接成功
[09:37:34,236] [INFO] AbstractLogger.handle_0ArgsCall --> 服务器连接成功
[09:38:03,744] [INFO] AbstractLogger.handle_0ArgsCall --> 服务器连接成功
[09:39:14,164] [INFO] AbstractLogger.handle_0ArgsCall --> 服务器连接成功
[09:55:00,344] [INFO] AbstractLogger.handle_0ArgsCall --> 服务器连接成功
[16:33:17,889] [INFO] AbstractLogger.handle_0ArgsCall --> 服务器连接成功
[17:29:22,771] [INFO] AbstractLogger.handle_0ArgsCall --> 服务器连接成功
[17:45:21,626] [INFO] AbstractLogger.handle_0ArgsCall --> 服务器连接成功
[18:58:39,197] [INFO] AbstractLogger.handle_0ArgsCall --> 服务器连接成功
[19:12:18,931] [INFO] AbstractLogger.handle_0ArgsCall --> 服务器连接成功
[19:12:44,652] [INFO] AbstractLogger.handle_0ArgsCall --> 服务器连接成功
[19:15:09,236] [INFO] AbstractLogger.handle_0ArgsCall --> 服务器连接成功
[19:25:35,540] [INFO] AbstractLogger.handle_0ArgsCall --> 服务器连接成功
[19:32:35,365] [INFO] AbstractLogger.handle_0ArgsCall --> 服务器连接成功
[19:39:19,284] [INFO] AbstractLogger.handle_0ArgsCall --> 服务器连接成功
[20:06:28,521] [INFO] AbstractLogger.handle_0ArgsCall --> 服务器连接成功
[20:08:09,600] [INFO] AbstractLogger.handle_0ArgsCall --> 服务器连接成功
[20:10:06,761] [INFO] AbstractLogger.handle_0ArgsCall --> 服务器连接成功
[20:11:20,757] [INFO] AbstractLogger.handle_0ArgsCall --> 服务器连接成功
[20:12:45,611] [INFO] AbstractLogger.handle_0ArgsCall --> 服务器连接成功
[20:14:40,469] [INFO] AbstractLogger.handle_0ArgsCall --> 服务器连接成功
[20:17:15,658] [INFO] AbstractLogger.handle_0ArgsCall --> 服务器连接成功
[20:18:27,111] [INFO] AbstractLogger.handle_0ArgsCall --> 服务器连接成功
[20:19:20,029] [INFO] AbstractLogger.handle_0ArgsCall --> 服务器连接成功
[20:24:54,188] [INFO] AbstractLogger.handle_0ArgsCall --> 服务器连接成功
[20:28:39,158] [INFO] AbstractLogger.handle_0ArgsCall --> 服务器连接成功
[20:29:21,865] [INFO] AbstractLogger.handle_0ArgsCall --> 服务器连接成功
[20:30:21,265] [INFO] AbstractLogger.handle_0ArgsCall --> 服务器连接成功
[21:58:48,589] [INFO] AbstractLogger.handle_0ArgsCall --> 成功连接服务器
[22:11:51,689] [INFO] AbstractLogger.handle_0ArgsCall --> 成功连接服务器
[22:16:01,686] [INFO] AbstractLogger.handle_0ArgsCall --> 成功连接服务器
[22:16:49,257] [INFO] AbstractLogger.handle_0ArgsCall --> 成功连接服务器
[22:47:56,613] [INFO] AbstractLogger.handle_0ArgsCall --> 成功连接服务器
[23:13:00,600] [INFO] AbstractLogger.handle_0ArgsCall --> 成功连接服务器
[23:13:37,790] [ERROR] AbstractLogger.handle_0ArgsCall --> 无法识别的消息类型
[23:13:47,822] [ERROR] AbstractLogger.handle_0ArgsCall --> 无法识别的消息类型
[23:13:57,856] [ERROR] AbstractLogger.handle_0ArgsCall --> 无法识别的消息类型
[23:14:07,877] [ERROR] AbstractLogger.handle_0ArgsCall --> 无法识别的消息类型
[23:14:17,904] [ERROR] AbstractLogger.handle_0ArgsCall --> 无法识别的消息类型
[23:14:27,928] [ERROR] AbstractLogger.handle_0ArgsCall --> 无法识别的消息类型
[23:14:37,952] [ERROR] AbstractLogger.handle_0ArgsCall --> 无法识别的消息类型
[23:14:47,970] [ERROR] AbstractLogger.handle_0ArgsCall --> 无法识别的消息类型
[23:14:57,990] [ERROR] AbstractLogger.handle_0ArgsCall --> 无法识别的消息类型
[23:15:14,204] [INFO] AbstractLogger.handle_0ArgsCall --> 成功连接服务器
[23:15:14,761] [ERROR] AbstractLogger.handle_0ArgsCall --> 无法识别的消息类型
[23:15:24,789] [ERROR] AbstractLogger.handle_0ArgsCall --> 无法识别的消息类型
[23:15:34,816] [ERROR] AbstractLogger.handle_0ArgsCall --> 无法识别的消息类型
[23:15:52,807] [INFO] AbstractLogger.handle_0ArgsCall --> 成功连接服务器
[23:15:53,413] [ERROR] AbstractLogger.handle_0ArgsCall --> 无法识别的消息类型
[23:16:03,441] [ERROR] AbstractLogger.handle_0ArgsCall --> 无法识别的消息类型
[23:16:13,466] [ERROR] AbstractLogger.handle_0ArgsCall --> 无法识别的消息类型
[23:16:23,490] [ERROR] AbstractLogger.handle_0ArgsCall --> 无法识别的消息类型
[23:16:33,510] [ERROR] AbstractLogger.handle_0ArgsCall --> 无法识别的消息类型
[23:16:43,532] [ERROR] AbstractLogger.handle_0ArgsCall --> 无法识别的消息类型
[23:16:53,548] [ERROR] AbstractLogger.handle_0ArgsCall --> 无法识别的消息类型
[23:17:03,571] [ERROR] AbstractLogger.handle_0ArgsCall --> 无法识别的消息类型
[23:17:13,592] [ERROR] AbstractLogger.handle_0ArgsCall --> 无法识别的消息类型
[23:17:23,614] [ERROR] AbstractLogger.handle_0ArgsCall --> 无法识别的消息类型
[23:17:33,638] [ERROR] AbstractLogger.handle_0ArgsCall --> 无法识别的消息类型
[23:17:43,064] [ERROR] AbstractLogger.handle_0ArgsCall --> 无法识别的消息类型
[23:17:45,336] [ERROR] AbstractLogger.handle_0ArgsCall --> 无法识别的消息类型
[23:20:32,235] [INFO] AbstractLogger.handle_0ArgsCall --> 成功连接服务器
[23:20:32,486] [ERROR] AbstractLogger.handle_0ArgsCall --> 无法识别的消息类型
[23:22:30,327] [INFO] AbstractLogger.handle_0ArgsCall --> 成功连接服务器
[23:22:30,724] [ERROR] AbstractLogger.handle_0ArgsCall --> 无法识别的消息类型
[23:22:48,711] [INFO] AbstractLogger.handle_0ArgsCall --> 成功连接服务器
[23:22:49,284] [ERROR] AbstractLogger.handle_0ArgsCall --> 无法识别的消息类型
[23:25:01,595] [INFO] AbstractLogger.handle_0ArgsCall --> 成功连接服务器
[23:25:02,236] [ERROR] AbstractLogger.handle_0ArgsCall --> 无法识别的消息类型
[23:25:12,264] [ERROR] AbstractLogger.handle_0ArgsCall --> 无法识别的消息类型
[23:26:06,640] [INFO] AbstractLogger.handle_0ArgsCall --> 成功连接服务器
[23:26:06,902] [ERROR] AbstractLogger.handle_0ArgsCall --> 无法识别的消息类型, msgClazz = io.netty.handler.codec.http.DefaultFullHttpResponse
[23:27:26,401] [INFO] AbstractLogger.handle_0ArgsCall --> 成功连接服务器
[23:27:26,637] [ERROR] AbstractLogger.handle_0ArgsCall --> 无法识别的消息类型, msgClazz = io.netty.handler.codec.http.DefaultFullHttpResponse
[23:27:36,663] [ERROR] AbstractLogger.handle_0ArgsCall --> 无法识别的消息类型, msgClazz = io.netty.handler.codec.http.DefaultFullHttpResponse
[23:28:37,952] [INFO] AbstractLogger.handle_0ArgsCall --> 成功连接服务器
[23:28:38,189] [ERROR] AbstractLogger.handle_0ArgsCall --> 无法识别的消息类型, msgClazz = io.netty.handler.codec.http.DefaultFullHttpResponse
[23:29:13,162] [ERROR] AbstractLogger.handle_0ArgsCall --> 无法识别的消息类型, msgClazz = io.netty.handler.codec.http.DefaultFullHttpResponse
[23:29:24,500] [INFO] AbstractLogger.handle_0ArgsCall --> 成功连接服务器
[23:29:24,942] [ERROR] AbstractLogger.handle_0ArgsCall --> 无法识别的消息类型, msgClazz = io.netty.handler.codec.http.DefaultFullHttpResponse
[23:29:30,619] [ERROR] AbstractLogger.handle_0ArgsCall --> 无法识别的消息类型, msgClazz = io.netty.handler.codec.http.DefaultFullHttpResponse
[23:29:55,095] [INFO] AbstractLogger.handle_0ArgsCall --> 成功连接服务器
[23:30:07,687] [ERROR] AbstractLogger.handle_0ArgsCall --> 无法识别的消息类型, msgClazz = io.netty.handler.codec.http.DefaultFullHttpResponse
[23:30:17,710] [ERROR] AbstractLogger.handle_0ArgsCall --> 无法识别的消息类型, msgClazz = io.netty.handler.codec.http.DefaultFullHttpResponse
[23:30:27,743] [ERROR] AbstractLogger.handle_0ArgsCall --> 无法识别的消息类型, msgClazz = io.netty.handler.codec.http.DefaultFullHttpResponse
[23:30:37,760] [ERROR] AbstractLogger.handle_0ArgsCall --> 无法识别的消息类型, msgClazz = io.netty.handler.codec.http.DefaultFullHttpResponse
[23:30:55,939] [INFO] AbstractLogger.handle_0ArgsCall --> 成功连接服务器
[23:31:31,928] [INFO] AbstractLogger.handle_0ArgsCall --> 成功连接服务器
[23:34:37,490] [INFO] AbstractLogger.handle_0ArgsCall --> 成功连接服务器
[23:34:59,352] [INFO] AbstractLogger.handle_0ArgsCall --> 成功连接服务器
[23:34:59,975] [ERROR] AbstractLogger.handle_0ArgsCall --> 无法识别的消息类型, msgClazz = io.netty.handler.codec.http.DefaultFullHttpResponse
[23:35:10,012] [ERROR] AbstractLogger.handle_0ArgsCall --> 无法识别的消息类型, msgClazz = io.netty.handler.codec.http.DefaultFullHttpResponse
[23:35:20,045] [ERROR] AbstractLogger.handle_0ArgsCall --> 无法识别的消息类型, msgClazz = io.netty.handler.codec.http.DefaultFullHttpResponse
[23:39:36,786] [INFO] AbstractLogger.handle_0ArgsCall --> 成功连接服务器
[23:39:57,222] [INFO] AbstractLogger.handle_0ArgsCall --> 成功连接服务器
[23:39:57,718] [ERROR] AbstractLogger.handle_0ArgsCall --> 无法识别的消息类型, msgClazz = io.netty.handler.codec.http.DefaultFullHttpResponse
